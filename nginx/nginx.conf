upstream api {     # backend server
    server backend:8000;
}
server {
    listen 80;
    listen [::]:80 default_server;

    # server 블럭에서 어떤 도메인을 라우팅 할 것인지 결정
    server_name gtd.kro.kr gtd.kro.kr;
    charset utf-8;
    client_max_body_size 10M;

    listen 443 ssl; # managed by Certbot
    listen [::]:443 ssl default_server;

    # RSA certificate
    server_name gtd.kro.kr;
    ssl_certificate /etc/crypt/certificate.pem; # managed by Certbot
    ssl_certificate_key /etc/crypt/privkey.pem; # managed by Certbot
    ssl_prefer_server_ciphers on;

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }      
    
    # 요청받은 url로 연결
    location /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://backend;
    }

    # # static 파일 디렉토리 연결
    # location /staticfiles {
    #     alias /backend/staticfiles;       # alias : 이 경로에서 찾기
    # }
    # # media 파일 디렉토리 연결
    # location /mediafiles {
    #     alias /data/mediafiles;
    # }

    # ignore cache frontend
    location ~* (service-worker\.js)$ {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        proxy_no_cache 1;
    }

    location /static/ {
        alias /backend/static/;
    }
  
    location / {
        root /var/www/frontend;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
}
